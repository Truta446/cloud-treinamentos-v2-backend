openapi: "3.0.3"

info:
  title: CT API
  version: "1.0"
  description: >
    Esta é a documentação da API pública REST para integração de parceiros da Gen.
    Aqui você encontrará as informações necessárias para autenticação e uso das chamadas da API.

servers:
  - url: https://api.neuraltab.net/
    description: Servidor de produção

paths:
  /authentication/public/customers:
    post:
      tags:
        - Authentication
      summary: Upsert Customer
      description: >
        Endpoint para criar ou atualizar um cliente. Requer autenticação.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpsertPublicCustomerParamsInput"
      responses:
        "200":
          description: Cliente criado ou atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PartnerResponseCustomerDto"
        "400":
          description: Requisição inválida
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /authentication/public/sellers:
    post:
      tags:
        - Authentication
      summary: Upsert Seller
      description: >
        Endpoint para criar ou atualizar um vendedor. Requer autenticação.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePublicSellerParamsInput"
      responses:
        "200":
          description: Vendedor criado ou atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PartnerResponseSellerDto"
        "400":
          description: Requisição inválida
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /authentication/public/partners/login:
    post:
      tags:
        - Authentication
      summary: Login de Parceiro
      description: >
        Endpoint para autenticação de parceiros. O parceiro deve fornecer email, senha e token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PartnerLoginDto"
      responses:
        "200":
          description: Login bem-sucedido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PartnerResponseLoginDto"
        "401":
          description: Falha na autenticação
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /authentication/public/partners/password:
    put:
      tags:
        - Authentication
      summary: Update Partner Password
      description: >
        Endpoint para atualizar a senha do parceiro. Requer autenticação.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePartnerPasswordDto"
      responses:
        "200":
          description: Senha atualizada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PartnerResponsePasswordDto"
        "400":
          description: Requisição inválida
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /coupon/public/coupons:
    get:
      tags:
        - Coupons
      summary: List Coupons
      description: >
        Endpoint para listar cupons. Requer autenticação.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: filters.sellerId
          schema:
            type: string
            format: uuid
            example: "123e4567-e89b-12d3-a456-426614174000"
          description: ID do vendedor
        - in: query
          name: filters.mallId
          schema:
            type: integer
            example: 1
          description: ID do Shopping Center
        - in: query
          name: filters.name
          schema:
            type: string
            example: "Discount Coupon"
          description: Nome do cupom
        - in: query
          name: filters.description
          schema:
            type: string
            example: "10% off on all items"
          description: Descrição do cupom
        - in: query
          name: filters.typeDiscount
          schema:
            type: string
            enum: [percentage, fixed]
            example: "percentage"
          description: Tipo de desconto
        - in: query
          name: filters.startDate
          schema:
            type: string
            format: date
            example: "2023-01-01"
          description: Data de início do cupom
        - in: query
          name: filters.endDate
          schema:
            type: string
            format: date
            example: "2023-12-31"
          description: Data de término do cupom
        - in: query
          name: pagination.perPage
          schema:
            type: integer
            example: 10
          description: Número de itens por página
        - in: query
          name: pagination.page
          schema:
            type: integer
            example: 1
          description: Número da página
        - in: query
          name: pagination.sortingOrder
          schema:
            type: string
            enum: [desc, asc]
            example: "desc"
          description: Ordenar crescente ou decrescente
        - in: query
          name: pagination.orderBy
          schema:
            type: string
            example: "name"
          description: Campo para ordenar
      responses:
        "200":
          description: Lista de cupons retornada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultListResponsePublicCoupons"
        "400":
          description: Requisição inválida
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  schemas:
    PartnerLoginDto:
      type: object
      properties:
        email:
          type: string
          example: "partner@example.com"
        password:
          type: string
          example: "password123"
        token:
          type: string
          example: "partner-token"
    UpsertPublicCustomerParamsInput:
      type: object
      properties:
        name:
          type: string
          example: "John Doe"
        email:
          type: string
          example: "johndoe@email.com"
        phoneNumber:
          type: string
          example: "62996789999"
        birthDate:
          type: string
          example: "1990-01-01"
    CreatePublicSellerParamsInput:
      type: object
      properties:
        name:
          type: string
          example: "John Doe"
        email:
          type: string
          example: "partner@gen.com.br"
        cpf:
          type: string
          example: "12345678901"
        phoneNumber:
          type: string
          example: "+5562996789999"
        cnpj:
          type: string
          example: "12345678901234"
    UpdatePartnerPasswordDto:
      type: object
      properties:
        email:
          type: string
          example: "partner@gen.com.br"
        password:
          type: string
          example: "password123"
        newPassword:
          type: string
          example: "newpassword123"
        token:
          type: string
          example: "partner-token"
    PartnerResponseCustomerDto:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Customer created"
        data:
          type: object
          properties:
            customerId:
              type: string
              example: "customer-id"
    PartnerResponseSellerDto:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Seller created"
        data:
          type: object
          properties:
            sellerId:
              type: string
              example: "seller-id"
    PartnerResponseLoginDto:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Login successful"
        data:
          type: object
          properties:
            authorizationToken:
              type: string
              example: "generated-token"
    PartnerResponsePasswordDto:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Password updated successfully"
        data:
          type: object
          properties:
            email:
              type: string
              example: "partner@gen.com.br"
    ResultListResponsePublicCoupons:
      type: object
      properties:
        pageSize:
          type: integer
          example: 10
        page:
          type: integer
          example: 1
        totalPages:
          type: integer
          example: 5
        total:
          type: integer
          example: 50
        results:
          type: array
          items:
            $ref: "#/components/schemas/PublicCouponEntity"
    PublicCouponEntity:
      type: object
      properties:
        id:
          type: string
          example: "coupon-id"
        code:
          type: string
          example: "COUPON2023"
        name:
          type: string
          example: "Discount Coupon"
        description:
          type: string
          example: "10% off on all items"
        start_date:
          type: string
          format: date
          example: "2023-01-01"
        expiration_date:
          type: string
          format: date
          example: "2023-12-31"
        value:
          type: number
          format: float
          example: 10.0
        created_at:
          type: string
          format: date-time
          example: "2023-01-01T00:00:00Z"
        typeDiscount:
          type: string
          example: "percentage"
        amount:
          type: integer
          example: 100
        coupon_image:
          type: string
          example: "https://example.com/coupon.jpg"
        buy_value_min:
          type: number
          format: float
          example: 50.0
        buy_value_max:
          type: number
          format: float
          example: 500.0
        mall:
          $ref: "#/components/schemas/PublicCouponMallEntity"
        seller:
          $ref: "#/components/schemas/PublicCouponSellerEntity"
    PublicCouponMallEntity:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Gen Mall"
        acronym:
          type: string
          example: "GM"
        banner:
          type: string
          example: "https://example.com/banner.jpg"
        logo:
          type: string
          example: "https://example.com/logo.jpg"
    PublicCouponSellerEntity:
      type: object
      properties:
        id:
          type: string
          example: "seller-id"
        cnpj:
          type: string
          example: "12345678901234"
        phone:
          type: string
          example: "+5562996789999"
        email:
          type: string
          example: "seller@gen.com.br"
        cpf:
          type: string
          example: "12345678901"
        business_name:
          type: string
          example: "Gen Seller"
    ErrorResponse:
      type: object
      properties:
        statusCode:
          type: integer
        message:
          type: string
        error:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
